<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\RAM\CS.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\RAM\CS.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Thu Mar 30 00:31:00 2023
<BR><P>
<H3>Maximum Stack Usage =        288 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; ae_init &rArr; ae_set_proc_info &rArr; set_test_procs &rArr; init_ae_tsk_test &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[5a]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[5]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">NMI_Handler</a><BR>
 <LI><a href="#[7]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">MemManage_Handler</a><BR>
 <LI><a href="#[8]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">BusFault_Handler</a><BR>
 <LI><a href="#[9]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">UsageFault_Handler</a><BR>
 <LI><a href="#[b]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">DebugMon_Handler</a><BR>
 <LI><a href="#[c]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">PendSV_Handler</a><BR>
 <LI><a href="#[d]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">SysTick_Handler</a><BR>
 <LI><a href="#[24]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[24]">ADC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[25]">BOD_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[8]">BusFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[30]">CANActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[27]">CAN_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[28]">DMA_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[b]">DebugMon_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[20]">EINT0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[21]">EINT1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[22]">EINT2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[23]">EINT3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2a]">ENET_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[6]">HardFault_Handler</a> from ae_util.o(i.HardFault_Handler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[18]">I2C0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[19]">I2C1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1a]">I2C2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[29]">I2S_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2c]">MCPWM_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[7]">MemManage_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[5]">NMI_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1e]">PLL0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2e]">PLL1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[17]">PWM1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[c]">PendSV_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2d]">QEI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2b]">RIT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1f]">RTC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[4]">Reset_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1b]">SPI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1c]">SSP0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1d]">SSP1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[a]">SVC_Handler</a> from hal.o(.emb_text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[d]">SysTick_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[31]">SystemInit</a> from system_lpc17xx.o(i.SystemInit) referenced from startup_lpc17xx.o(.text)
 <LI><a href="#[f]">TIMER0_IRQHandler</a> from k_timer.o(.emb_text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[10]">TIMER1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[11]">TIMER2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[12]">TIMER3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[13]">UART0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[14]">UART1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[15]">UART2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[16]">UART3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2f]">USBActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[26]">USB_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[9]">UsageFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[e]">WDT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[47]">__main</a> from __main.o(!!!main) referenced from startup_lpc17xx.o(.text)
 <LI><a href="#[3d]">k_delayed_send</a> from k_msg.o(i.k_delayed_send) referenced from ae_proc211.o(i.proc3)
 <LI><a href="#[3b]">k_receive_message</a> from k_msg.o(i.k_receive_message) referenced from ae_proc211.o(i.proc2)
 <LI><a href="#[3b]">k_receive_message</a> from k_msg.o(i.k_receive_message) referenced from ae_proc211.o(i.proc4)
 <LI><a href="#[3c]">k_release_memory_block</a> from k_memory.o(i.k_release_memory_block) referenced from ae_proc211.o(i.proc2)
 <LI><a href="#[3c]">k_release_memory_block</a> from k_memory.o(i.k_release_memory_block) referenced from ae_proc211.o(i.proc4)
 <LI><a href="#[3a]">k_release_processor</a> from k_process.o(i.k_release_processor) referenced from ae_proc211.o(i.proc1)
 <LI><a href="#[3a]">k_release_processor</a> from k_process.o(i.k_release_processor) referenced from ae_proc211.o(i.proc2)
 <LI><a href="#[3a]">k_release_processor</a> from k_process.o(i.k_release_processor) referenced from ae_proc211.o(i.proc3)
 <LI><a href="#[3a]">k_release_processor</a> from k_process.o(i.k_release_processor) referenced from ae_proc211.o(i.proc5)
 <LI><a href="#[3a]">k_release_processor</a> from k_process.o(i.k_release_processor) referenced from ae_proc211.o(i.proc6)
 <LI><a href="#[37]">k_request_memory_block</a> from k_memory.o(i.k_request_memory_block) referenced from ae_proc211.o(i.proc1)
 <LI><a href="#[37]">k_request_memory_block</a> from k_memory.o(i.k_request_memory_block) referenced from ae_proc211.o(i.proc3)
 <LI><a href="#[36]">k_rtx_init</a> from k_rtx_init.o(i.k_rtx_init) referenced from main_svc.o(i.main)
 <LI><a href="#[38]">k_send_message</a> from k_msg.o(i.k_send_message) referenced from ae_proc211.o(i.proc1)
 <LI><a href="#[39]">k_set_process_priority</a> from k_process.o(i.k_set_process_priority) referenced from ae_proc211.o(i.proc1)
 <LI><a href="#[39]">k_set_process_priority</a> from k_process.o(i.k_set_process_priority) referenced from ae_proc211.o(i.proc2)
 <LI><a href="#[3e]">null_process</a> from k_process.o(i.null_process) referenced from k_process.o(i.process_init)
 <LI><a href="#[46]">partial_sum</a> from k_timer.o(i.partial_sum) referenced from k_timer.o(i.timer0_iproc)
 <LI><a href="#[33]">pcb_node_is_pid</a> from k_process.o(i.pcb_node_is_pid) referenced from k_msg.o(i.k_receive_message)
 <LI><a href="#[33]">pcb_node_is_pid</a> from k_process.o(i.pcb_node_is_pid) referenced from k_process.o(i.k_release_processor)
 <LI><a href="#[33]">pcb_node_is_pid</a> from k_process.o(i.pcb_node_is_pid) referenced from k_memory.o(i.k_request_memory_block)
 <LI><a href="#[33]">pcb_node_is_pid</a> from k_process.o(i.pcb_node_is_pid) referenced from k_process.o(i.k_set_process_priority)
 <LI><a href="#[35]">pre_rtx_init</a> from main_svc.o(i.pre_rtx_init) referenced from main_svc.o(i.main)
 <LI><a href="#[3f]">proc1</a> from ae_proc211.o(i.proc1) referenced from ae_proc211.o(i.set_test_procs)
 <LI><a href="#[40]">proc2</a> from ae_proc211.o(i.proc2) referenced from ae_proc211.o(i.set_test_procs)
 <LI><a href="#[41]">proc3</a> from ae_proc211.o(i.proc3) referenced from ae_proc211.o(i.set_test_procs)
 <LI><a href="#[42]">proc4</a> from ae_proc211.o(i.proc4) referenced from ae_proc211.o(i.set_test_procs)
 <LI><a href="#[43]">proc5</a> from ae_proc211.o(i.proc5) referenced from ae_proc211.o(i.set_test_procs)
 <LI><a href="#[44]">proc6</a> from ae_proc211.o(i.proc6) referenced from ae_proc211.o(i.set_test_procs)
 <LI><a href="#[34]">putc</a> from uart_polling.o(i.putc) referenced from main_svc.o(i.main)
 <LI><a href="#[45]">putcp</a> from printf.o(i.putcp) referenced from printf.o(i.tfp_sprintf)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[47]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[48]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[4a]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[96]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[97]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[4b]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[98]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[4f]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[99]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[9a]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[9b]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[9c]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[9d]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[9e]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[9f]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[a0]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[a1]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[a2]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[a3]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[a4]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[a5]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[a6]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[a7]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[a8]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[a9]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[aa]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[ab]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[ac]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[ad]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[54]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[ae]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[af]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[b0]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[b1]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[b2]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[b3]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[b4]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[49]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[b5]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[4c]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[4e]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[b6]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[50]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; ae_init &rArr; ae_set_proc_info &rArr; set_test_procs &rArr; init_ae_tsk_test &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[b7]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[5b]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[53]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[b8]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[55]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[91]"></a>__rte</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_switch
</UL>

<P><STRONG><a name="[a]"></a>SVC_Handler</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, hal.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, k_timer.o(.emb_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = TIMER0_IRQHandler &rArr; timer0_iproc &rArr; k_send_message &rArr; k_release_processor &rArr; move_elt_if &rArr; delete_elt_if &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_iproc
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>CANActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>PLL0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>PLL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USBActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[8f]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc3
</UL>

<P><STRONG><a name="[b9]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[ba]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[bd]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[be]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[52]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[bf]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[59]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[c0]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[56]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[c1]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[c2]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[c3]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[6]"></a>HardFault_Handler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ae_util.o(i.HardFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = HardFault_Handler &rArr; test_abort &rArr; print_summary &rArr; print_results &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_abort
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>SystemInit</STRONG> (Thumb, 302 bytes, Stack size 0 bytes, system_lpc17xx.o(i.SystemInit))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(.text)
</UL>
<P><STRONG><a name="[89]"></a>ae_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ae.o(i.ae_exit))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_summary
</UL>

<P><STRONG><a name="[60]"></a>ae_init</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, ae.o(i.ae_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = ae_init &rArr; ae_set_proc_info &rArr; set_test_procs &rArr; init_ae_tsk_test &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ae_timer_init_100MHZ
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ae_set_proc_info
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[62]"></a>ae_set_proc_info</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ae.o(i.ae_set_proc_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = ae_set_proc_info &rArr; set_test_procs &rArr; init_ae_tsk_test &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_test_procs
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ae_init
</UL>

<P><STRONG><a name="[61]"></a>ae_timer_init_100MHZ</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, ae_timer.o(i.ae_timer_init_100MHZ))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ae_init
</UL>

<P><STRONG><a name="[90]"></a>alloc_stack</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, k_memory.o(i.alloc_stack))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_init
</UL>

<P><STRONG><a name="[64]"></a>check_exec_seq</STRONG> (Thumb, 208 bytes, Stack size 48 bytes, ae_proc211.o(i.check_exec_seq))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = check_exec_seq &rArr; test_exit &rArr; print_summary &rArr; print_results &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_exit
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_sub_result
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test1_start
</UL>

<P><STRONG><a name="[87]"></a>count_set_bits</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ae_util.o(i.count_set_bits))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_results
</UL>

<P><STRONG><a name="[68]"></a>delete_elt_if</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, queue.o(i.delete_elt_if))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = delete_elt_if &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;single_element_or_empty
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;empty
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_receive_message
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_elt_if
</UL>

<P><STRONG><a name="[6b]"></a>dequeue</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, queue.o(i.dequeue))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = dequeue &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;single_element_or_empty
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;empty
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_iproc
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scheduler
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_receive_message_nb
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_receive_message
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_request_memory_block_nb
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_memory_block
</UL>

<P><STRONG><a name="[69]"></a>empty</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, queue.o(i.empty))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_iproc
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;try_scheduler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scheduler
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_elt_if
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_receive_message_nb
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_receive_message
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enqueue
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dequeue
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_memory_block
</UL>

<P><STRONG><a name="[6c]"></a>enqueue</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, queue.o(i.enqueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = enqueue &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;empty
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_iproc
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insert_elt_if
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scheduler
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_init
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_send_message
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_delayed_send
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_elt_if
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_memory_block
</UL>

<P><STRONG><a name="[6d]"></a>gen_req0</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, ae_proc211.o(i.gen_req0))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gen_req0
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_ae_xtest
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test0_start
</UL>

<P><STRONG><a name="[6f]"></a>gen_req1</STRONG> (Thumb, 132 bytes, Stack size 20 bytes, ae_proc211.o(i.gen_req1))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gen_req1
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_ae_xtest
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test1_start
</UL>

<P><STRONG><a name="[70]"></a>get_block_index</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, k_memory.o(i.get_block_index))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = get_block_index &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reassign_memory_ownership
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_request_memory_block_nb
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_memory_block
</UL>

<P><STRONG><a name="[73]"></a>init_ae_tsk_test</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, ae_proc211.o(i.init_ae_tsk_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = init_ae_tsk_test &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test0_start
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_test_procs
</UL>

<P><STRONG><a name="[84]"></a>init_printf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf.o(i.init_printf))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[75]"></a>insert_elt_if</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, queue.o(i.insert_elt_if))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = insert_elt_if &rArr; enqueue &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enqueue
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_iproc
</UL>

<P><STRONG><a name="[58]"></a>interrupt_handler</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, k_process.o(i.interrupt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = interrupt_handler &rArr; k_release_processor &rArr; move_elt_if &rArr; delete_elt_if &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;try_scheduler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_processor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_get_process_priority
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
</UL>

<P><STRONG><a name="[3d]"></a>k_delayed_send</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, k_msg.o(i.k_delayed_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = k_delayed_send &rArr; reassign_memory_ownership &rArr; get_block_index &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_unprivileged
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enqueue
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reassign_memory_ownership
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ae_proc211.o(i.proc3)
</UL>
<P><STRONG><a name="[7a]"></a>k_get_process_by_pid</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, k_process.o(i.k_get_process_by_pid))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = k_get_process_by_pid &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_set_process_priority
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_send_message
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_get_process_priority
</UL>

<P><STRONG><a name="[76]"></a>k_get_process_priority</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, k_process.o(i.k_get_process_priority))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = k_get_process_priority &rArr; k_get_process_by_pid &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_get_process_by_pid
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_set_process_priority
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_handler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_processor
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_request_memory_block
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_memory_block
</UL>

<P><STRONG><a name="[3b]"></a>k_receive_message</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, k_msg.o(i.k_receive_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = k_receive_message &rArr; k_release_processor &rArr; move_elt_if &rArr; delete_elt_if &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_elt_if
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_processor
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;empty
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dequeue
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ae_proc211.o(i.proc2)
<LI> ae_proc211.o(i.proc4)
</UL>
<P><STRONG><a name="[7b]"></a>k_receive_message_nb</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, k_msg.o(i.k_receive_message_nb))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = k_receive_message_nb &rArr; dequeue &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;empty
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dequeue
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_iproc
</UL>

<P><STRONG><a name="[3c]"></a>k_release_memory_block</STRONG> (Thumb, 290 bytes, Stack size 32 bytes, k_memory.o(i.k_release_memory_block))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = k_release_memory_block &rArr; k_release_processor &rArr; move_elt_if &rArr; delete_elt_if &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_unprivileged
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_processor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_get_process_priority
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enqueue
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;empty
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dequeue
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_block_index
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ae_proc211.o(i.proc2)
<LI> ae_proc211.o(i.proc4)
</UL>
<P><STRONG><a name="[3a]"></a>k_release_processor</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, k_process.o(i.k_release_processor))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = k_release_processor &rArr; move_elt_if &rArr; delete_elt_if &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scheduler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_switch
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_unprivileged
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_elt_if
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_get_process_priority
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_set_process_priority
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_handler
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_send_message
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_receive_message
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_request_memory_block
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_memory_block
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_rtx_init
</UL>
<BR>[Address Reference Count : 5]<UL><LI> ae_proc211.o(i.proc1)
<LI> ae_proc211.o(i.proc2)
<LI> ae_proc211.o(i.proc3)
<LI> ae_proc211.o(i.proc5)
<LI> ae_proc211.o(i.proc6)
</UL>
<P><STRONG><a name="[37]"></a>k_request_memory_block</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, k_memory.o(i.k_request_memory_block))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = k_request_memory_block &rArr; k_release_processor &rArr; move_elt_if &rArr; delete_elt_if &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_unprivileged
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_elt_if
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_processor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_get_process_priority
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_request_memory_block_nb
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ae_proc211.o(i.proc1)
<LI> ae_proc211.o(i.proc3)
</UL>
<P><STRONG><a name="[7f]"></a>k_request_memory_block_nb</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, k_memory.o(i.k_request_memory_block_nb))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = k_request_memory_block_nb &rArr; dequeue &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_unprivileged
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dequeue
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_block_index
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_request_memory_block
</UL>

<P><STRONG><a name="[36]"></a>k_rtx_init</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, k_rtx_init.o(i.k_rtx_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = k_rtx_init &rArr; k_release_processor &rArr; move_elt_if &rArr; delete_elt_if &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_processor
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_svc.o(i.main)
</UL>
<P><STRONG><a name="[38]"></a>k_send_message</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, k_msg.o(i.k_send_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = k_send_message &rArr; k_release_processor &rArr; move_elt_if &rArr; delete_elt_if &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_get_process_by_pid
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_unprivileged
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_processor
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enqueue
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reassign_memory_ownership
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_iproc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ae_proc211.o(i.proc1)
</UL>
<P><STRONG><a name="[39]"></a>k_set_process_priority</STRONG> (Thumb, 414 bytes, Stack size 40 bytes, k_process.o(i.k_set_process_priority))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = k_set_process_priority &rArr; k_release_processor &rArr; move_elt_if &rArr; delete_elt_if &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_get_process_by_pid
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_unprivileged
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_elt_if
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_processor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_get_process_priority
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ae_proc211.o(i.proc1)
<LI> ae_proc211.o(i.proc2)
</UL>
<P><STRONG><a name="[51]"></a>main</STRONG> (Thumb, 56 bytes, Stack size 104 bytes, main_svc.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = main &rArr; ae_init &rArr; ae_set_proc_info &rArr; set_test_procs &rArr; init_ae_tsk_test &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_printf
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ae_init
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[80]"></a>memory_init</STRONG> (Thumb, 372 bytes, Stack size 24 bytes, k_memory.o(i.memory_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = memory_init &rArr; enqueue &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enqueue
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_block_index
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_rtx_init
</UL>

<P><STRONG><a name="[7c]"></a>move_elt_if</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, queue.o(i.move_elt_if))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = move_elt_if &rArr; delete_elt_if &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_elt_if
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enqueue
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_set_process_priority
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_processor
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_request_memory_block
</UL>

<P><STRONG><a name="[3e]"></a>null_process</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, k_process.o(i.null_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = null_process &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> k_process.o(i.process_init)
</UL>
<P><STRONG><a name="[46]"></a>partial_sum</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, k_timer.o(i.partial_sum))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = partial_sum &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> k_timer.o(i.timer0_iproc)
</UL>
<P><STRONG><a name="[33]"></a>pcb_node_is_pid</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, k_process.o(i.pcb_node_is_pid))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = pcb_node_is_pid &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Address Reference Count : 4]<UL><LI> k_memory.o(i.k_request_memory_block)
<LI> k_msg.o(i.k_receive_message)
<LI> k_process.o(i.k_release_processor)
<LI> k_process.o(i.k_set_process_priority)
</UL>
<P><STRONG><a name="[35]"></a>pre_rtx_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main_svc.o(i.pre_rtx_init))
<BR>[Address Reference Count : 1]<UL><LI> main_svc.o(i.main)
</UL>
<P><STRONG><a name="[85]"></a>print_log</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, ae_util.o(i.print_log))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = print_log &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_sub_result
</UL>

<P><STRONG><a name="[86]"></a>print_results</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, ae_util.o(i.print_results))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = print_results &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_set_bits
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_summary
</UL>

<P><STRONG><a name="[88]"></a>print_summary</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ae_util.o(i.print_summary))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = print_summary &rArr; print_results &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_results
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ae_exit
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_exit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_abort
</UL>

<P><STRONG><a name="[3f]"></a>proc1</STRONG> (Thumb, 288 bytes, Stack size 0 bytes, ae_proc211.o(i.proc1))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = proc1 &rArr; test1_start &rArr; check_exec_seq &rArr; test_exit &rArr; print_summary &rArr; print_results &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_put_string
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_put_char
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_exec_seq
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test1_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ae_proc211.o(i.set_test_procs)
</UL>
<P><STRONG><a name="[40]"></a>proc2</STRONG> (Thumb, 320 bytes, Stack size 0 bytes, ae_proc211.o(i.proc2))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = proc2 &rArr; process_sub_result &rArr; print_log &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_sub_result
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_put_string
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_put_char
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_sprintf
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_exec_seq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ae_proc211.o(i.set_test_procs)
</UL>
<P><STRONG><a name="[41]"></a>proc3</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, ae_proc211.o(i.proc3))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = proc3 &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_put_string
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_exec_seq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ae_proc211.o(i.set_test_procs)
</UL>
<P><STRONG><a name="[42]"></a>proc4</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, ae_proc211.o(i.proc4))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = proc4 &rArr; test1_start &rArr; check_exec_seq &rArr; test_exit &rArr; print_summary &rArr; print_results &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_sub_result
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_put_string
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_sprintf
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_exec_seq
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test1_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ae_proc211.o(i.set_test_procs)
</UL>
<P><STRONG><a name="[43]"></a>proc5</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ae_proc211.o(i.proc5))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = proc5 &rArr; test1_start &rArr; check_exec_seq &rArr; test_exit &rArr; print_summary &rArr; print_results &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_put_string
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_exec_seq
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test1_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ae_proc211.o(i.set_test_procs)
</UL>
<P><STRONG><a name="[44]"></a>proc6</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ae_proc211.o(i.proc6))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = proc6 &rArr; test1_start &rArr; check_exec_seq &rArr; test_exit &rArr; print_summary &rArr; print_results &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_put_string
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_exec_seq
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test1_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ae_proc211.o(i.set_test_procs)
</UL>
<P><STRONG><a name="[81]"></a>process_init</STRONG> (Thumb, 522 bytes, Stack size 32 bytes, k_process.o(i.process_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = process_init &rArr; enqueue &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enqueue
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_stack
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_rtx_init
</UL>

<P><STRONG><a name="[66]"></a>process_sub_result</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, ae_util.o(i.process_sub_result))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = process_sub_result &rArr; print_log &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc2
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_exec_seq
</UL>

<P><STRONG><a name="[7e]"></a>process_switch</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, k_process.o(i.process_switch))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = process_switch &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rte
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_processor
</UL>

<P><STRONG><a name="[34]"></a>putc</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, uart_polling.o(i.putc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = putc &rArr; uart_put_string
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_put_string
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_put_char
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_svc.o(i.main)
</UL>
<P><STRONG><a name="[78]"></a>reassign_memory_ownership</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, k_memory.o(i.reassign_memory_ownership))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = reassign_memory_ownership &rArr; get_block_index &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_block_index
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_send_message
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_delayed_send
</UL>

<P><STRONG><a name="[7d]"></a>scheduler</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, k_process.o(i.scheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = scheduler &rArr; enqueue &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enqueue
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;empty
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dequeue
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_processor
</UL>

<P><STRONG><a name="[63]"></a>set_test_procs</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, ae_proc211.o(i.set_test_procs))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = set_test_procs &rArr; init_ae_tsk_test &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ae_tsk_test
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ae_set_proc_info
</UL>

<P><STRONG><a name="[79]"></a>set_unprivileged</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, k_rtx.o(i.set_unprivileged))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set_unprivileged
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_CONTROL
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_set_process_priority
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_send_message
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_delayed_send
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_processor
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_request_memory_block_nb
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_request_memory_block
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_memory_block
</UL>

<P><STRONG><a name="[6a]"></a>single_element_or_empty</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, queue.o(i.single_element_or_empty))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_elt_if
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dequeue
</UL>

<P><STRONG><a name="[65]"></a>strcpy</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ae_util.o(i.strcpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_exec_seq
</UL>

<P><STRONG><a name="[74]"></a>test0_start</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ae_proc211.o(i.test0_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = test0_start &rArr; gen_req0
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_req0
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ae_tsk_test
</UL>

<P><STRONG><a name="[8d]"></a>test1_start</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ae_proc211.o(i.test1_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = test1_start &rArr; check_exec_seq &rArr; test_exit &rArr; print_summary &rArr; print_results &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_req1
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_exec_seq
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc6
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc5
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc4
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc1
</UL>

<P><STRONG><a name="[5d]"></a>test_abort</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ae_util.o(i.test_abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = test_abort &rArr; print_summary &rArr; print_results &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_summary
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>

<P><STRONG><a name="[67]"></a>test_exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ae_util.o(i.test_exit))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = test_exit &rArr; print_summary &rArr; print_results &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_summary
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_exec_seq
</UL>

<P><STRONG><a name="[93]"></a>tfp_format</STRONG> (Thumb, 296 bytes, Stack size 56 bytes, printf.o(i.tfp_format))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui2a
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putchw
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2a
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2i
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_sprintf
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>

<P><STRONG><a name="[5c]"></a>tfp_printf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf.o(i.tfp_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_format
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_exit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_abort
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_summary
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_results
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_log
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;partial_sum
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_iproc
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insert_elt_if
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;try_dequeue
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;try_scheduler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scheduler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_switch
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;null_process
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_set_process_priority
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_get_process_by_pid
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_elt_if
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_send_message
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_receive_message_nb
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_receive_message
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_delayed_send
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcb_node_is_pid
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_elt_if
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_processor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_get_process_priority
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enqueue
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dequeue
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reassign_memory_ownership
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_request_memory_block_nb
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_request_memory_block
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_memory_block
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_block_index
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc3
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc2
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc1
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ae_tsk_test
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_exec_seq
</UL>

<P><STRONG><a name="[8e]"></a>tfp_sprintf</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, printf.o(i.tfp_sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = tfp_sprintf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_format
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putcp
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc2
</UL>

<P><STRONG><a name="[57]"></a>timer0_iproc</STRONG> (Thumb, 208 bytes, Stack size 16 bytes, k_timer.o(i.timer0_iproc))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = timer0_iproc &rArr; k_send_message &rArr; k_release_processor &rArr; move_elt_if &rArr; delete_elt_if &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insert_elt_if
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_send_message
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_receive_message_nb
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enqueue
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;empty
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dequeue
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
</UL>

<P><STRONG><a name="[82]"></a>timer_init</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, k_timer.o(i.timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_rtx_init
</UL>

<P><STRONG><a name="[95]"></a>try_dequeue</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, queue.o(i.try_dequeue))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = try_dequeue &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;try_scheduler
</UL>

<P><STRONG><a name="[77]"></a>try_scheduler</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, k_process.o(i.try_scheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = try_scheduler &rArr; try_dequeue &rArr; tfp_printf &rArr; tfp_format &rArr; putchw
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;try_dequeue
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;empty
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_handler
</UL>

<P><STRONG><a name="[83]"></a>uart_init</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, uart_polling.o(i.uart_init))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8c]"></a>uart_put_char</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, uart_polling.o(i.uart_put_char))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_put_string
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc2
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc1
</UL>

<P><STRONG><a name="[8b]"></a>uart_put_string</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, uart_polling.o(i.uart_put_string))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = uart_put_string
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_put_char
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc6
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc5
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc3
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc2
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc1
</UL>

<P><STRONG><a name="[6e]"></a>update_ae_xtest</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ae_proc211.o(i.update_ae_xtest))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_req1
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_req0
</UL>

<P><STRONG><a name="[8a]"></a>update_exec_seq</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, ae_proc211.o(i.update_exec_seq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = update_exec_seq
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc6
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc5
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc3
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc2
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proc1
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[5f]"></a>a2d</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, printf.o(i.a2d))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2i
</UL>

<P><STRONG><a name="[5e]"></a>a2i</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, printf.o(i.a2i))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = a2i
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2d
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_format
</UL>

<P><STRONG><a name="[71]"></a>i2a</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, printf.o(i.i2a))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = i2a &rArr; ui2a
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui2a
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_format
</UL>

<P><STRONG><a name="[94]"></a>putchw</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, printf.o(i.putchw))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = putchw
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_format
</UL>

<P><STRONG><a name="[45]"></a>putcp</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf.o(i.putcp))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf.o(i.tfp_sprintf)
</UL>
<P><STRONG><a name="[72]"></a>ui2a</STRONG> (Thumb, 86 bytes, Stack size 20 bytes, printf.o(i.ui2a))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ui2a
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_format
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2a
</UL>

<P><STRONG><a name="[92]"></a>__set_CONTROL</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, k_rtx.o(i.__set_CONTROL))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_unprivileged
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
