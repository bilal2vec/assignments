# Checking for valid and invalid user inputs

1. Passing in no arguments:

Correctly throws an error

```bash
$ ./binsertsort
Usage: ./binsertsort unsorted-file [ sorted-file ]
$
```

2. Passing in input file that does not exist:

Corrently throws an error

```bash
$ ./binsertsort null.txt
Error! Could not open input file "null.txt"
$
```

3. Passing in no output file

Echos output to stdout

```bash
$ cat q1_1.txt
8 25 6 8 5 99 100 101 7
3 1 3 5
0
10 9 8 7 6 5 4 3 2 1 0
$ ./binsertsort q1_1.txt
25 6 8 5 99 100 101 7
5 6 7 8 25 99 100 101

1 3 5
1 3 5




9 8 7 6 5 4 3 2 1 0
0 1 2 3 4 5 6 7 8 9
$
```

4. Passing in output file

Writes output to file

```bash
$ cat q1_1.txt
8 25 6 8 5 99 100 101 7
3 1 3 5
0
10 9 8 7 6 5 4 3 2 1 0
$ ./binsertsort q1_1.txt q1_out.txt
$ cat q1_out.txt
25 6 8 5 99 100 101 7
5 6 7 8 25 99 100 101

1 3 5
1 3 5




9 8 7 6 5 4 3 2 1 0
0 1 2 3 4 5 6 7 8 9

$
```